name: PR Checks

# We don't run these jobs on pull requests because:
# 1. it is often useful to run tests on one's branch without creating a pull
#    request, and
# 2. running on both pushes and pull requests results in the classic problem of
#    having double jobs.
on: push

# Left to-do:
# - coverage
# - publishing docs to gh-pages
# - persistent artifact cache
# - overnight jobs
# - other one-off jobs like missing-deps, plugin jobs etc
# - wsl tasks (TODO: Check if GitHub's Windows runners allow WSL)
#
# New opportunities:
# - run tests on mac (GitHub provides MacOS runners)
# - standardize WSL tasks by using GitHub-provided runners
#
#
# NOTE:
#
# * GitHub Actions do not support YAML variables and/or YAML anchors, which
#   leads to some repetition. Job matrices solve this to some extent but
#   combined with some other issues, this seems like a ongoing source of
#   misery.
# * Not being able to use the standard `container` directive for running our
#   tests is one such example that makes this situation seem worse.
#
# * We have caches etc in GitHub Actions as well, so I don't think we are
#   missing any killer feature.
#
# * Fixing most of the to-do items is mostly mostly a matter of adding more
#   configuration.
# * Some of these tasks can probably live in a different yaml file as a
#   separate workflow.
#
# * Similar to GitLab, GitHub also has a container registry, so we can move our
#   testsuite images there if/when we want to fully migrate off of GitLab.
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  tests:
    runs-on: ubuntu-20.04
    continue-on-error: ${{ matrix.allow-failure || false }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - debian:10
          - fedora:30
          - fedora:31
          - ubuntu:18.04
          - centos:7.7.1908
        test_cmd:
          - tox -- --color=yes --integration -n 4
        toxenv:
          - py36-nocover,py37-nocover,py38-nocover
        bst-plugins-experimental-version:
          - 1.93.4
        allow-failure:
          - false
        include:
          - platform: fedora:30
            test_cmd: tox -e mypy
          - platform: fedora:30
            test_cmd: tox -e format-check,lint
          - platform: fedora:30
            test_cmd: tox -e docs
            # This appears to require this env being set
            bst-plugins-experimental-version: 1.93.4
          # Ensure that tests also pass without `--develop` flag.
          - test-name: no-usedevelop
            platform: fedora:31
            toxenv: py36-nocover,py37-nocover,py38-nocover
          # Test the master version of some external plugins
          - test-name: plugins-master
            platform: fedora:31
            bst-plugins-experimental-version: master
            allow-failure: true
    env:
      PLATFORM: ${{ matrix.platform }}
      TEST_CMD: ${{ matrix.test_cmd }}
      TOX_ENV: ${{ matrix.toxenv }}
      BST_PLUGINS_EXPERIMENTAL_VERSION: ${{ matrix.bst-plugins-experimental-version }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        # BuildStream requires tags to be able to find its version.
        with:
          fetch-depth: 0
      - name: run tests
        run: |
          docker-compose up --exit-code-from tests tests
  tests-fedora-missing-deps:
    runs-on: ubuntu-20.04
    env:
      PLATFORM: fedora:31
      TEST_CMD: tox -- --color=yes --integration -n 4
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        # BuildStream requires tags to be able to find its version.
        with:
          fetch-depth: 0
      - name: run tests
        run: |
          docker-compose up --exit-code-from fedora_missing_deps fedora_missing_deps
